{"ast":null,"code":"import JSBI from 'jsbi';\nexport { default as JSBI } from 'jsbi';\nimport invariant from 'tiny-invariant';\nimport warning from 'tiny-warning';\nimport { getAddress, getCreate2Address } from '@ethersproject/address';\nimport _Big from 'big.js';\nimport toFormat from 'toformat';\nimport _Decimal from 'decimal.js-light';\nimport { keccak256, pack } from '@ethersproject/solidity';\nimport { Contract } from '@ethersproject/contracts';\nimport { getNetwork } from '@ethersproject/networks';\nimport { getDefaultProvider } from '@ethersproject/providers';\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json';\n\nvar _SOLIDITY_TYPE_MAXIMA;\n\nvar ChainId;\n\n(function (ChainId) {\n  ChainId[ChainId[\"MAINNET\"] = 56] = \"MAINNET\";\n  ChainId[ChainId[\"BSCTESTNET\"] = 97] = \"BSCTESTNET\";\n})(ChainId || (ChainId = {}));\n\nvar TradeType;\n\n(function (TradeType) {\n  TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\n  TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\n})(TradeType || (TradeType = {}));\n\nvar Rounding;\n\n(function (Rounding) {\n  Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\n  Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\n  Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\n})(Rounding || (Rounding = {}));\n\nvar FACTORY_ADDRESS = '0xeCC28296F247039e4DB1B9020B5CFd88d894D038';\nvar INIT_CODE_HASH = '0x822ff3c2d51b4f9c46f38ae96412ff10bbd84843877801fd574c65123ea4d705';\nvar MINIMUM_LIQUIDITY = /*#__PURE__*/JSBI.BigInt(1000); // exports for internal consumption\n\nvar ZERO = /*#__PURE__*/JSBI.BigInt(0);\nvar ONE = /*#__PURE__*/JSBI.BigInt(1);\nvar TWO = /*#__PURE__*/JSBI.BigInt(2);\nvar THREE = /*#__PURE__*/JSBI.BigInt(3);\nvar FIVE = /*#__PURE__*/JSBI.BigInt(5);\nvar TEN = /*#__PURE__*/JSBI.BigInt(10);\n\nvar _100 = /*#__PURE__*/JSBI.BigInt(100);\n\nvar _997 = /*#__PURE__*/JSBI.BigInt(997);\n\nvar _1000 = /*#__PURE__*/JSBI.BigInt(1000);\n\nvar SolidityType;\n\n(function (SolidityType) {\n  SolidityType[\"uint8\"] = \"uint8\";\n  SolidityType[\"uint256\"] = \"uint256\";\n})(SolidityType || (SolidityType = {}));\n\nvar SOLIDITY_TYPE_MAXIMA = (_SOLIDITY_TYPE_MAXIMA = {}, _SOLIDITY_TYPE_MAXIMA[SolidityType.uint8] = /*#__PURE__*/JSBI.BigInt('0xff'), _SOLIDITY_TYPE_MAXIMA[SolidityType.uint256] = /*#__PURE__*/JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'), _SOLIDITY_TYPE_MAXIMA);\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n} // see https://stackoverflow.com/a/41102306\n\n\nvar CAN_SET_PROTOTYPE = ('setPrototypeOf' in Object);\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\n\nvar InsufficientReservesError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(InsufficientReservesError, _Error);\n\n  function InsufficientReservesError() {\n    var _this;\n\n    _this = _Error.call(this) || this;\n    _this.isInsufficientReservesError = true;\n    _this.name = _this.constructor.name;\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(_assertThisInitialized(_this), (this instanceof InsufficientReservesError ? this.constructor : void 0).prototype);\n    return _this;\n  }\n\n  return InsufficientReservesError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\n\n\nvar InsufficientInputAmountError = /*#__PURE__*/function (_Error2) {\n  _inheritsLoose(InsufficientInputAmountError, _Error2);\n\n  function InsufficientInputAmountError() {\n    var _this2;\n\n    _this2 = _Error2.call(this) || this;\n    _this2.isInsufficientInputAmountError = true;\n    _this2.name = _this2.constructor.name;\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(_assertThisInitialized(_this2), (this instanceof InsufficientInputAmountError ? this.constructor : void 0).prototype);\n    return _this2;\n  }\n\n  return InsufficientInputAmountError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction validateSolidityTypeInstance(value, solidityType) {\n  !JSBI.greaterThanOrEqual(value, ZERO) ? process.env.NODE_ENV !== \"production\" ? invariant(false, value + \" is not a \" + solidityType + \".\") : invariant(false) : void 0;\n  !JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]) ? process.env.NODE_ENV !== \"production\" ? invariant(false, value + \" is not a \" + solidityType + \".\") : invariant(false) : void 0;\n} // warns if addresses are not checksummed\n\n\nfunction validateAndParseAddress(address) {\n  try {\n    var checksummedAddress = getAddress(address);\n    process.env.NODE_ENV !== \"production\" ? warning(address === checksummedAddress, address + \" is not checksummed.\") : void 0;\n    return checksummedAddress;\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? invariant(false, address + \" is not a valid address.\") : invariant(false);\n  }\n}\n\nfunction parseBigintIsh(bigintIsh) {\n  return bigintIsh instanceof JSBI ? bigintIsh : typeof bigintIsh === 'bigint' ? JSBI.BigInt(bigintIsh.toString()) : JSBI.BigInt(bigintIsh);\n} // mock the on-chain sqrt function\n\n\nfunction sqrt(y) {\n  validateSolidityTypeInstance(y, SolidityType.uint256);\n  var z = ZERO;\n  var x;\n\n  if (JSBI.greaterThan(y, THREE)) {\n    z = y;\n    x = JSBI.add(JSBI.divide(y, TWO), ONE);\n\n    while (JSBI.lessThan(x, z)) {\n      z = x;\n      x = JSBI.divide(JSBI.add(JSBI.divide(y, x), x), TWO);\n    }\n  } else if (JSBI.notEqual(y, ZERO)) {\n    z = ONE;\n  }\n\n  return z;\n} // given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\n\n\nfunction sortedInsert(items, add, maxSize, comparator) {\n  !(maxSize > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MAX_SIZE_ZERO') : invariant(false) : void 0; // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n\n  !(items.length <= maxSize) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ITEMS_SIZE') : invariant(false) : void 0; // short circuit first item add\n\n  if (items.length === 0) {\n    items.push(add);\n    return null;\n  } else {\n    var isFull = items.length === maxSize; // short circuit if full and the additional item does not come before the last item\n\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add;\n    }\n\n    var lo = 0,\n        hi = items.length;\n\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n\n    items.splice(lo, 0, add);\n    return isFull ? items.pop() : null;\n  }\n}\n/**\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\n *\n * The only instance of the base class `Currency` is Ether.\n */\n\n\nvar Currency =\n/**\n * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.ETHER`.\n * @param decimals decimals of the currency\n * @param symbol symbol of the currency\n * @param name of the currency\n */\nfunction Currency(decimals, symbol, name) {\n  validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8);\n  this.decimals = decimals;\n  this.symbol = symbol;\n  this.name = name;\n};\n/**\n * The only instance of the base class `Currency`.\n */\n\n\nCurrency.ETHER = /*#__PURE__*/new Currency(18, 'BNB', 'Binance');\nvar ETHER = Currency.ETHER;\n\nvar _WETH;\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\n\n\nvar Token = /*#__PURE__*/function (_Currency) {\n  _inheritsLoose(Token, _Currency);\n\n  function Token(chainId, address, decimals, symbol, name) {\n    var _this;\n\n    _this = _Currency.call(this, decimals, symbol, name) || this;\n    _this.chainId = chainId;\n    _this.address = validateAndParseAddress(address);\n    return _this;\n  }\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n\n\n  var _proto = Token.prototype;\n\n  _proto.equals = function equals(other) {\n    // short circuit on reference equality\n    if (this === other) {\n      return true;\n    }\n\n    return this.chainId === other.chainId && this.address === other.address;\n  }\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  ;\n\n  _proto.sortsBefore = function sortsBefore(other) {\n    !(this.chainId === other.chainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_IDS') : invariant(false) : void 0;\n    !(this.address !== other.address) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ADDRESSES') : invariant(false) : void 0;\n    return this.address.toLowerCase() < other.address.toLowerCase();\n  };\n\n  return Token;\n}(Currency);\n/**\n * Compares two currencies for equality\n */\n\n\nfunction currencyEquals(currencyA, currencyB) {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB);\n  } else if (currencyA instanceof Token) {\n    return false;\n  } else if (currencyB instanceof Token) {\n    return false;\n  } else {\n    return currencyA === currencyB;\n  }\n}\n\nvar WETH = (_WETH = {}, _WETH[ChainId.MAINNET] = /*#__PURE__*/new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'), _WETH[ChainId.BSCTESTNET] = /*#__PURE__*/new Token(ChainId.BSCTESTNET, '0xaE8E19eFB41e7b96815649A6a60785e1fbA84C1e', 18, 'WBNB', 'Wrapped BNB'), _WETH);\n\nvar _toSignificantRoundin, _toFixedRounding;\n\nvar Decimal = /*#__PURE__*/toFormat(_Decimal);\nvar Big = /*#__PURE__*/toFormat(_Big);\nvar toSignificantRounding = (_toSignificantRoundin = {}, _toSignificantRoundin[Rounding.ROUND_DOWN] = Decimal.ROUND_DOWN, _toSignificantRoundin[Rounding.ROUND_HALF_UP] = Decimal.ROUND_HALF_UP, _toSignificantRoundin[Rounding.ROUND_UP] = Decimal.ROUND_UP, _toSignificantRoundin);\nvar toFixedRounding = (_toFixedRounding = {}, _toFixedRounding[Rounding.ROUND_DOWN] = 0, _toFixedRounding[Rounding.ROUND_HALF_UP] = 1, _toFixedRounding[Rounding.ROUND_UP] = 3, _toFixedRounding);\n\nvar Fraction = /*#__PURE__*/function () {\n  function Fraction(numerator, denominator) {\n    if (denominator === void 0) {\n      denominator = ONE;\n    }\n\n    this.numerator = parseBigintIsh(numerator);\n    this.denominator = parseBigintIsh(denominator);\n  } // performs floor division\n\n\n  var _proto = Fraction.prototype;\n\n  _proto.invert = function invert() {\n    return new Fraction(this.denominator, this.numerator);\n  };\n\n  _proto.add = function add(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(JSBI.add(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.subtract = function subtract(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(JSBI.subtract(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.lessThan = function lessThan(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.lessThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.equalTo = function equalTo(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.equal(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.greaterThan = function greaterThan(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.greaterThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.multiply = function multiply(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return new Fraction(JSBI.multiply(this.numerator, otherParsed.numerator), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.divide = function divide(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return new Fraction(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(this.denominator, otherParsed.numerator));\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n\n    !Number.isInteger(significantDigits) ? process.env.NODE_ENV !== \"production\" ? invariant(false, significantDigits + \" is not an integer.\") : invariant(false) : void 0;\n    !(significantDigits > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, significantDigits + \" is not positive.\") : invariant(false) : void 0;\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    });\n    var quotient = new Decimal(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n\n    !Number.isInteger(decimalPlaces) ? process.env.NODE_ENV !== \"production\" ? invariant(false, decimalPlaces + \" is not an integer.\") : invariant(false) : void 0;\n    !(decimalPlaces >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, decimalPlaces + \" is negative.\") : invariant(false) : void 0;\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  };\n\n  _createClass(Fraction, [{\n    key: \"quotient\",\n    get: function get() {\n      return JSBI.divide(this.numerator, this.denominator);\n    } // remainder after floor division\n\n  }, {\n    key: \"remainder\",\n    get: function get() {\n      return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator);\n    }\n  }]);\n\n  return Fraction;\n}();\n\nvar Big$1 = /*#__PURE__*/toFormat(_Big);\n\nvar CurrencyAmount = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(CurrencyAmount, _Fraction); // amount _must_ be raw, i.e. in the native representation\n\n\n  function CurrencyAmount(currency, amount) {\n    var _this;\n\n    var parsedAmount = parseBigintIsh(amount);\n    validateSolidityTypeInstance(parsedAmount, SolidityType.uint256);\n    _this = _Fraction.call(this, parsedAmount, JSBI.exponentiate(TEN, JSBI.BigInt(currency.decimals))) || this;\n    _this.currency = currency;\n    return _this;\n  }\n  /**\n   * Helper that calls the constructor with the ETHER currency\n   * @param amount ether amount in wei\n   */\n\n\n  CurrencyAmount.ether = function ether(amount) {\n    return new CurrencyAmount(ETHER, amount);\n  };\n\n  var _proto = CurrencyAmount.prototype;\n\n  _proto.add = function add(other) {\n    !currencyEquals(this.currency, other.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return new CurrencyAmount(this.currency, JSBI.add(this.raw, other.raw));\n  };\n\n  _proto.subtract = function subtract(other) {\n    !currencyEquals(this.currency, other.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return new CurrencyAmount(this.currency, JSBI.subtract(this.raw, other.raw));\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n\n    return _Fraction.prototype.toSignificant.call(this, significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = this.currency.decimals;\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n\n    !(decimalPlaces <= this.currency.decimals) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DECIMALS') : invariant(false) : void 0;\n    return _Fraction.prototype.toFixed.call(this, decimalPlaces, format, rounding);\n  };\n\n  _proto.toExact = function toExact(format) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    Big$1.DP = this.currency.decimals;\n    return new Big$1(this.numerator.toString()).div(this.denominator.toString()).toFormat(format);\n  };\n\n  _createClass(CurrencyAmount, [{\n    key: \"raw\",\n    get: function get() {\n      return this.numerator;\n    }\n  }]);\n\n  return CurrencyAmount;\n}(Fraction);\n\nvar TokenAmount = /*#__PURE__*/function (_CurrencyAmount) {\n  _inheritsLoose(TokenAmount, _CurrencyAmount); // amount _must_ be raw, i.e. in the native representation\n\n\n  function TokenAmount(token, amount) {\n    var _this;\n\n    _this = _CurrencyAmount.call(this, token, amount) || this;\n    _this.token = token;\n    return _this;\n  }\n\n  var _proto = TokenAmount.prototype;\n\n  _proto.add = function add(other) {\n    !this.token.equals(other.token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return new TokenAmount(this.token, JSBI.add(this.raw, other.raw));\n  };\n\n  _proto.subtract = function subtract(other) {\n    !this.token.equals(other.token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw));\n  };\n\n  return TokenAmount;\n}(CurrencyAmount);\n\nvar Price = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(Price, _Fraction); // denominator and numerator _must_ be raw, i.e. in the native representation\n\n\n  function Price(baseCurrency, quoteCurrency, denominator, numerator) {\n    var _this;\n\n    _this = _Fraction.call(this, numerator, denominator) || this;\n    _this.baseCurrency = baseCurrency;\n    _this.quoteCurrency = quoteCurrency;\n    _this.scalar = new Fraction(JSBI.exponentiate(TEN, JSBI.BigInt(baseCurrency.decimals)), JSBI.exponentiate(TEN, JSBI.BigInt(quoteCurrency.decimals)));\n    return _this;\n  }\n\n  Price.fromRoute = function fromRoute(route) {\n    var prices = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(route.pairs.entries()), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          i = _step$value[0],\n          pair = _step$value[1];\n      prices.push(route.path[i].equals(pair.token0) ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.raw, pair.reserve1.raw) : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.raw, pair.reserve0.raw));\n    }\n\n    return prices.slice(1).reduce(function (accumulator, currentValue) {\n      return accumulator.multiply(currentValue);\n    }, prices[0]);\n  };\n\n  var _proto = Price.prototype;\n\n  _proto.invert = function invert() {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);\n  };\n\n  _proto.multiply = function multiply(other) {\n    !currencyEquals(this.quoteCurrency, other.baseCurrency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    var fraction = _Fraction.prototype.multiply.call(this, other);\n\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator);\n  } // performs floor division on overflow\n  ;\n\n  _proto.quote = function quote(currencyAmount) {\n    !currencyEquals(currencyAmount.currency, this.baseCurrency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    if (this.quoteCurrency instanceof Token) {\n      return new TokenAmount(this.quoteCurrency, _Fraction.prototype.multiply.call(this, currencyAmount.raw).quotient);\n    }\n\n    return CurrencyAmount.ether(_Fraction.prototype.multiply.call(this, currencyAmount.raw).quotient);\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n\n    return this.adjusted.toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 4;\n    }\n\n    return this.adjusted.toFixed(decimalPlaces, format, rounding);\n  };\n\n  _createClass(Price, [{\n    key: \"raw\",\n    get: function get() {\n      return new Fraction(this.numerator, this.denominator);\n    }\n  }, {\n    key: \"adjusted\",\n    get: function get() {\n      return _Fraction.prototype.multiply.call(this, this.scalar);\n    }\n  }]);\n\n  return Price;\n}(Fraction);\n\nvar PAIR_ADDRESS_CACHE = {};\n\nvar Pair = /*#__PURE__*/function () {\n  function Pair(tokenAmountA, tokenAmountB) {\n    var tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n    ? [tokenAmountA, tokenAmountB] : [tokenAmountB, tokenAmountA];\n    this.liquidityToken = new Token(tokenAmounts[0].token.chainId, Pair.getAddress(tokenAmounts[0].token, tokenAmounts[1].token), 18, 'UNI-V2', 'Uniswap V2');\n    this.tokenAmounts = tokenAmounts;\n  }\n\n  Pair.getAddress = function getAddress(tokenA, tokenB) {\n    var _PAIR_ADDRESS_CACHE, _PAIR_ADDRESS_CACHE$t;\n\n    var tokens = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]; // does safety checks\n\n    if (((_PAIR_ADDRESS_CACHE = PAIR_ADDRESS_CACHE) === null || _PAIR_ADDRESS_CACHE === void 0 ? void 0 : (_PAIR_ADDRESS_CACHE$t = _PAIR_ADDRESS_CACHE[tokens[0].address]) === null || _PAIR_ADDRESS_CACHE$t === void 0 ? void 0 : _PAIR_ADDRESS_CACHE$t[tokens[1].address]) === undefined) {\n      var _PAIR_ADDRESS_CACHE2, _extends2, _extends3;\n\n      PAIR_ADDRESS_CACHE = _extends({}, PAIR_ADDRESS_CACHE, (_extends3 = {}, _extends3[tokens[0].address] = _extends({}, (_PAIR_ADDRESS_CACHE2 = PAIR_ADDRESS_CACHE) === null || _PAIR_ADDRESS_CACHE2 === void 0 ? void 0 : _PAIR_ADDRESS_CACHE2[tokens[0].address], (_extends2 = {}, _extends2[tokens[1].address] = getCreate2Address(FACTORY_ADDRESS, keccak256(['bytes'], [pack(['address', 'address'], [tokens[0].address, tokens[1].address])]), INIT_CODE_HASH), _extends2)), _extends3));\n    }\n\n    return PAIR_ADDRESS_CACHE[tokens[0].address][tokens[1].address];\n  }\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  ;\n\n  var _proto = Pair.prototype;\n\n  _proto.involvesToken = function involvesToken(token) {\n    return token.equals(this.token0) || token.equals(this.token1);\n  }\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  ;\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n\n\n  _proto.priceOf = function priceOf(token) {\n    !this.involvesToken(token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return token.equals(this.token0) ? this.token0Price : this.token1Price;\n  }\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  ;\n\n  _proto.reserveOf = function reserveOf(token) {\n    !this.involvesToken(token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1;\n  };\n\n  _proto.getOutputAmount = function getOutputAmount(inputAmount) {\n    !this.involvesToken(inputAmount.token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO)) {\n      throw new InsufficientReservesError();\n    }\n\n    var inputReserve = this.reserveOf(inputAmount.token);\n    var outputReserve = this.reserveOf(inputAmount.token.equals(this.token0) ? this.token1 : this.token0);\n    var inputAmountWithFee = JSBI.multiply(inputAmount.raw, _997);\n    var numerator = JSBI.multiply(inputAmountWithFee, outputReserve.raw);\n    var denominator = JSBI.add(JSBI.multiply(inputReserve.raw, _1000), inputAmountWithFee);\n    var outputAmount = new TokenAmount(inputAmount.token.equals(this.token0) ? this.token1 : this.token0, JSBI.divide(numerator, denominator));\n\n    if (JSBI.equal(outputAmount.raw, ZERO)) {\n      throw new InsufficientInputAmountError();\n    }\n\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))];\n  };\n\n  _proto.getInputAmount = function getInputAmount(outputAmount) {\n    !this.involvesToken(outputAmount.token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO) || JSBI.greaterThanOrEqual(outputAmount.raw, this.reserveOf(outputAmount.token).raw)) {\n      throw new InsufficientReservesError();\n    }\n\n    var outputReserve = this.reserveOf(outputAmount.token);\n    var inputReserve = this.reserveOf(outputAmount.token.equals(this.token0) ? this.token1 : this.token0);\n    var numerator = JSBI.multiply(JSBI.multiply(inputReserve.raw, outputAmount.raw), _1000);\n    var denominator = JSBI.multiply(JSBI.subtract(outputReserve.raw, outputAmount.raw), _997);\n    var inputAmount = new TokenAmount(outputAmount.token.equals(this.token0) ? this.token1 : this.token0, JSBI.add(JSBI.divide(numerator, denominator), ONE));\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))];\n  };\n\n  _proto.getLiquidityMinted = function getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB) {\n    !totalSupply.token.equals(this.liquidityToken) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LIQUIDITY') : invariant(false) : void 0;\n    var tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n    ? [tokenAmountA, tokenAmountB] : [tokenAmountB, tokenAmountA];\n    !(tokenAmounts[0].token.equals(this.token0) && tokenAmounts[1].token.equals(this.token1)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    var liquidity;\n\n    if (JSBI.equal(totalSupply.raw, ZERO)) {\n      liquidity = JSBI.subtract(sqrt(JSBI.multiply(tokenAmounts[0].raw, tokenAmounts[1].raw)), MINIMUM_LIQUIDITY);\n    } else {\n      var amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].raw, totalSupply.raw), this.reserve0.raw);\n      var amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].raw, totalSupply.raw), this.reserve1.raw);\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1;\n    }\n\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError();\n    }\n\n    return new TokenAmount(this.liquidityToken, liquidity);\n  };\n\n  _proto.getLiquidityValue = function getLiquidityValue(token, totalSupply, liquidity, feeOn, kLast) {\n    if (feeOn === void 0) {\n      feeOn = false;\n    }\n\n    !this.involvesToken(token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    !totalSupply.token.equals(this.liquidityToken) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOTAL_SUPPLY') : invariant(false) : void 0;\n    !liquidity.token.equals(this.liquidityToken) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LIQUIDITY') : invariant(false) : void 0;\n    !JSBI.lessThanOrEqual(liquidity.raw, totalSupply.raw) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LIQUIDITY') : invariant(false) : void 0;\n    var totalSupplyAdjusted;\n\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply;\n    } else {\n      !!!kLast ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'K_LAST') : invariant(false) : void 0;\n      var kLastParsed = parseBigintIsh(kLast);\n\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        var rootK = sqrt(JSBI.multiply(this.reserve0.raw, this.reserve1.raw));\n        var rootKLast = sqrt(kLastParsed);\n\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          var numerator = JSBI.multiply(totalSupply.raw, JSBI.subtract(rootK, rootKLast));\n          var denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast);\n          var feeLiquidity = JSBI.divide(numerator, denominator);\n          totalSupplyAdjusted = totalSupply.add(new TokenAmount(this.liquidityToken, feeLiquidity));\n        } else {\n          totalSupplyAdjusted = totalSupply;\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply;\n      }\n    }\n\n    return new TokenAmount(token, JSBI.divide(JSBI.multiply(liquidity.raw, this.reserveOf(token).raw), totalSupplyAdjusted.raw));\n  };\n\n  _createClass(Pair, [{\n    key: \"token0Price\",\n    get: function get() {\n      return new Price(this.token0, this.token1, this.tokenAmounts[0].raw, this.tokenAmounts[1].raw);\n    }\n    /**\n     * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n     */\n\n  }, {\n    key: \"token1Price\",\n    get: function get() {\n      return new Price(this.token1, this.token0, this.tokenAmounts[1].raw, this.tokenAmounts[0].raw);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.token0.chainId;\n    }\n  }, {\n    key: \"token0\",\n    get: function get() {\n      return this.tokenAmounts[0].token;\n    }\n  }, {\n    key: \"token1\",\n    get: function get() {\n      return this.tokenAmounts[1].token;\n    }\n  }, {\n    key: \"reserve0\",\n    get: function get() {\n      return this.tokenAmounts[0];\n    }\n  }, {\n    key: \"reserve1\",\n    get: function get() {\n      return this.tokenAmounts[1];\n    }\n  }]);\n\n  return Pair;\n}();\n\nvar Route = /*#__PURE__*/function () {\n  function Route(pairs, input, output) {\n    !(pairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PAIRS') : invariant(false) : void 0;\n    !pairs.every(function (pair) {\n      return pair.chainId === pairs[0].chainId;\n    }) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_IDS') : invariant(false) : void 0;\n    !(input instanceof Token && pairs[0].involvesToken(input) || input === ETHER && pairs[0].involvesToken(WETH[pairs[0].chainId])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INPUT') : invariant(false) : void 0;\n    !(typeof output === 'undefined' || output instanceof Token && pairs[pairs.length - 1].involvesToken(output) || output === ETHER && pairs[pairs.length - 1].involvesToken(WETH[pairs[0].chainId])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OUTPUT') : invariant(false) : void 0;\n    var path = [input instanceof Token ? input : WETH[pairs[0].chainId]];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(pairs.entries()), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          i = _step$value[0],\n          pair = _step$value[1];\n      var currentInput = path[i];\n      !(currentInput.equals(pair.token0) || currentInput.equals(pair.token1)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PATH') : invariant(false) : void 0;\n\n      var _output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0;\n\n      path.push(_output);\n    }\n\n    this.pairs = pairs;\n    this.path = path;\n    this.midPrice = Price.fromRoute(this);\n    this.input = input;\n    this.output = output !== null && output !== void 0 ? output : path[path.length - 1];\n  }\n\n  _createClass(Route, [{\n    key: \"chainId\",\n    get: function get() {\n      return this.pairs[0].chainId;\n    }\n  }]);\n\n  return Route;\n}();\n\nvar _100_PERCENT = /*#__PURE__*/new Fraction(_100);\n\nvar Percent = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(Percent, _Fraction);\n\n  function Percent() {\n    return _Fraction.apply(this, arguments) || this;\n  }\n\n  var _proto = Percent.prototype;\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 5;\n    }\n\n    return this.multiply(_100_PERCENT).toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 2;\n    }\n\n    return this.multiply(_100_PERCENT).toFixed(decimalPlaces, format, rounding);\n  };\n\n  return Percent;\n}(Fraction);\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\n\n\nfunction computePriceImpact(midPrice, inputAmount, outputAmount) {\n  var exactQuote = midPrice.raw.multiply(inputAmount.raw); // calculate slippage := (exactQuote - outputAmount) / exactQuote\n\n  var slippage = exactQuote.subtract(outputAmount.raw).divide(exactQuote);\n  return new Percent(slippage.numerator, slippage.denominator);\n} // comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\n\n\nfunction inputOutputComparator(a, b) {\n  // must have same input and output token for comparison\n  !currencyEquals(a.inputAmount.currency, b.inputAmount.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INPUT_CURRENCY') : invariant(false) : void 0;\n  !currencyEquals(a.outputAmount.currency, b.outputAmount.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OUTPUT_CURRENCY') : invariant(false) : void 0;\n\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0;\n    } // trade A requires less input than trade B, so A should come first\n\n\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n} // extension of the input output comparator that also considers other dimensions of the trade in ranking them\n\n\nfunction tradeComparator(a, b) {\n  var ioComp = inputOutputComparator(a, b);\n\n  if (ioComp !== 0) {\n    return ioComp;\n  } // consider lowest slippage next, since these are less likely to fail\n\n\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1;\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1;\n  } // finally consider the number of hops since each hop costs gas\n\n\n  return a.route.path.length - b.route.path.length;\n}\n/**\n * Given a currency amount and a chain ID, returns the equivalent representation as the token amount.\n * In other words, if the currency is ETHER, returns the WETH token amount for the given chain. Otherwise, returns\n * the input currency amount.\n */\n\n\nfunction wrappedAmount(currencyAmount, chainId) {\n  if (currencyAmount instanceof TokenAmount) return currencyAmount;\n  if (currencyAmount.currency === ETHER) return new TokenAmount(WETH[chainId], currencyAmount.raw);\n  process.env.NODE_ENV !== \"production\" ? invariant(false, 'CURRENCY') : invariant(false);\n}\n\nfunction wrappedCurrency(currency, chainId) {\n  if (currency instanceof Token) return currency;\n  if (currency === ETHER) return WETH[chainId];\n  process.env.NODE_ENV !== \"production\" ? invariant(false, 'CURRENCY') : invariant(false);\n}\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\n\n\nvar Trade = /*#__PURE__*/function () {\n  function Trade(route, amount, tradeType) {\n    var amounts = new Array(route.path.length);\n    var nextPairs = new Array(route.pairs.length);\n\n    if (tradeType === TradeType.EXACT_INPUT) {\n      !currencyEquals(amount.currency, route.input) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INPUT') : invariant(false) : void 0;\n      amounts[0] = wrappedAmount(amount, route.chainId);\n\n      for (var i = 0; i < route.path.length - 1; i++) {\n        var pair = route.pairs[i];\n\n        var _pair$getOutputAmount = pair.getOutputAmount(amounts[i]),\n            outputAmount = _pair$getOutputAmount[0],\n            nextPair = _pair$getOutputAmount[1];\n\n        amounts[i + 1] = outputAmount;\n        nextPairs[i] = nextPair;\n      }\n    } else {\n      !currencyEquals(amount.currency, route.output) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OUTPUT') : invariant(false) : void 0;\n      amounts[amounts.length - 1] = wrappedAmount(amount, route.chainId);\n\n      for (var _i = route.path.length - 1; _i > 0; _i--) {\n        var _pair = route.pairs[_i - 1];\n\n        var _pair$getInputAmount = _pair.getInputAmount(amounts[_i]),\n            inputAmount = _pair$getInputAmount[0],\n            _nextPair = _pair$getInputAmount[1];\n\n        amounts[_i - 1] = inputAmount;\n        nextPairs[_i - 1] = _nextPair;\n      }\n    }\n\n    this.route = route;\n    this.tradeType = tradeType;\n    this.inputAmount = tradeType === TradeType.EXACT_INPUT ? amount : route.input === ETHER ? CurrencyAmount.ether(amounts[0].raw) : amounts[0];\n    this.outputAmount = tradeType === TradeType.EXACT_OUTPUT ? amount : route.output === ETHER ? CurrencyAmount.ether(amounts[amounts.length - 1].raw) : amounts[amounts.length - 1];\n    this.executionPrice = new Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.raw, this.outputAmount.raw);\n    this.nextMidPrice = Price.fromRoute(new Route(nextPairs, route.input));\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount);\n  }\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n\n\n  Trade.exactIn = function exactIn(route, amountIn) {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT);\n  }\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  ;\n\n  Trade.exactOut = function exactOut(route, amountOut) {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT);\n  }\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  ;\n\n  var _proto = Trade.prototype;\n\n  _proto.minimumAmountOut = function minimumAmountOut(slippageTolerance) {\n    !!slippageTolerance.lessThan(ZERO) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'SLIPPAGE_TOLERANCE') : invariant(false) : void 0;\n\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount;\n    } else {\n      var slippageAdjustedAmountOut = new Fraction(ONE).add(slippageTolerance).invert().multiply(this.outputAmount.raw).quotient;\n      return this.outputAmount instanceof TokenAmount ? new TokenAmount(this.outputAmount.token, slippageAdjustedAmountOut) : CurrencyAmount.ether(slippageAdjustedAmountOut);\n    }\n  }\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  ;\n\n  _proto.maximumAmountIn = function maximumAmountIn(slippageTolerance) {\n    !!slippageTolerance.lessThan(ZERO) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'SLIPPAGE_TOLERANCE') : invariant(false) : void 0;\n\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount;\n    } else {\n      var slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.raw).quotient;\n      return this.inputAmount instanceof TokenAmount ? new TokenAmount(this.inputAmount.token, slippageAdjustedAmountIn) : CurrencyAmount.ether(slippageAdjustedAmountIn);\n    }\n  }\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  ;\n\n  Trade.bestTradeExactIn = function bestTradeExactIn(pairs, currencyAmountIn, currencyOut, _temp, // used in recursion.\n  currentPairs, originalAmountIn, bestTrades) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$maxNumResults = _ref.maxNumResults,\n        maxNumResults = _ref$maxNumResults === void 0 ? 3 : _ref$maxNumResults,\n        _ref$maxHops = _ref.maxHops,\n        maxHops = _ref$maxHops === void 0 ? 3 : _ref$maxHops;\n\n    if (currentPairs === void 0) {\n      currentPairs = [];\n    }\n\n    if (originalAmountIn === void 0) {\n      originalAmountIn = currencyAmountIn;\n    }\n\n    if (bestTrades === void 0) {\n      bestTrades = [];\n    }\n\n    !(pairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PAIRS') : invariant(false) : void 0;\n    !(maxHops > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MAX_HOPS') : invariant(false) : void 0;\n    !(originalAmountIn === currencyAmountIn || currentPairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INVALID_RECURSION') : invariant(false) : void 0;\n    var chainId = currencyAmountIn instanceof TokenAmount ? currencyAmountIn.token.chainId : currencyOut instanceof Token ? currencyOut.chainId : undefined;\n    !(chainId !== undefined) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_ID') : invariant(false) : void 0;\n    var amountIn = wrappedAmount(currencyAmountIn, chainId);\n    var tokenOut = wrappedCurrency(currencyOut, chainId);\n\n    for (var i = 0; i < pairs.length; i++) {\n      var pair = pairs[i]; // pair irrelevant\n\n      if (!pair.token0.equals(amountIn.token) && !pair.token1.equals(amountIn.token)) continue;\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue;\n      var amountOut = void 0;\n\n      try {\n        ;\n\n        var _pair$getOutputAmount2 = pair.getOutputAmount(amountIn);\n\n        amountOut = _pair$getOutputAmount2[0];\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue;\n        }\n\n        throw error;\n      } // we have arrived at the output token, so this is the final trade of one of the paths\n\n\n      if (amountOut.token.equals(tokenOut)) {\n        sortedInsert(bestTrades, new Trade(new Route([].concat(currentPairs, [pair]), originalAmountIn.currency, currencyOut), originalAmountIn, TradeType.EXACT_INPUT), maxNumResults, tradeComparator);\n      } else if (maxHops > 1 && pairs.length > 1) {\n        var pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length)); // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n\n        Trade.bestTradeExactIn(pairsExcludingThisPair, amountOut, currencyOut, {\n          maxNumResults: maxNumResults,\n          maxHops: maxHops - 1\n        }, [].concat(currentPairs, [pair]), originalAmountIn, bestTrades);\n      }\n    }\n\n    return bestTrades;\n  }\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param currencyAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  ;\n\n  Trade.bestTradeExactOut = function bestTradeExactOut(pairs, currencyIn, currencyAmountOut, _temp2, // used in recursion.\n  currentPairs, originalAmountOut, bestTrades) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$maxNumResults = _ref2.maxNumResults,\n        maxNumResults = _ref2$maxNumResults === void 0 ? 3 : _ref2$maxNumResults,\n        _ref2$maxHops = _ref2.maxHops,\n        maxHops = _ref2$maxHops === void 0 ? 3 : _ref2$maxHops;\n\n    if (currentPairs === void 0) {\n      currentPairs = [];\n    }\n\n    if (originalAmountOut === void 0) {\n      originalAmountOut = currencyAmountOut;\n    }\n\n    if (bestTrades === void 0) {\n      bestTrades = [];\n    }\n\n    !(pairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PAIRS') : invariant(false) : void 0;\n    !(maxHops > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MAX_HOPS') : invariant(false) : void 0;\n    !(originalAmountOut === currencyAmountOut || currentPairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INVALID_RECURSION') : invariant(false) : void 0;\n    var chainId = currencyAmountOut instanceof TokenAmount ? currencyAmountOut.token.chainId : currencyIn instanceof Token ? currencyIn.chainId : undefined;\n    !(chainId !== undefined) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_ID') : invariant(false) : void 0;\n    var amountOut = wrappedAmount(currencyAmountOut, chainId);\n    var tokenIn = wrappedCurrency(currencyIn, chainId);\n\n    for (var i = 0; i < pairs.length; i++) {\n      var pair = pairs[i]; // pair irrelevant\n\n      if (!pair.token0.equals(amountOut.token) && !pair.token1.equals(amountOut.token)) continue;\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue;\n      var amountIn = void 0;\n\n      try {\n        ;\n\n        var _pair$getInputAmount2 = pair.getInputAmount(amountOut);\n\n        amountIn = _pair$getInputAmount2[0];\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue;\n        }\n\n        throw error;\n      } // we have arrived at the input token, so this is the first trade of one of the paths\n\n\n      if (amountIn.token.equals(tokenIn)) {\n        sortedInsert(bestTrades, new Trade(new Route([pair].concat(currentPairs), currencyIn, originalAmountOut.currency), originalAmountOut, TradeType.EXACT_OUTPUT), maxNumResults, tradeComparator);\n      } else if (maxHops > 1 && pairs.length > 1) {\n        var pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length)); // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n\n        Trade.bestTradeExactOut(pairsExcludingThisPair, currencyIn, amountIn, {\n          maxNumResults: maxNumResults,\n          maxHops: maxHops - 1\n        }, [pair].concat(currentPairs), originalAmountOut, bestTrades);\n      }\n    }\n\n    return bestTrades;\n  };\n\n  return Trade;\n}();\n\nfunction toHex(currencyAmount) {\n  return \"0x\" + currencyAmount.raw.toString(16);\n}\n\nvar ZERO_HEX = '0x0';\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\n\nvar Router = /*#__PURE__*/function () {\n  /**\n   * Cannot be constructed.\n   */\n  function Router() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n\n\n  Router.swapCallParameters = function swapCallParameters(trade, options) {\n    var etherIn = trade.inputAmount.currency === ETHER;\n    var etherOut = trade.outputAmount.currency === ETHER; // the router does not support both ether in and out\n\n    !!(etherIn && etherOut) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ETHER_IN_OUT') : invariant(false) : void 0;\n    !(options.ttl > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TTL') : invariant(false) : void 0;\n    var to = validateAndParseAddress(options.recipient);\n    var amountIn = toHex(trade.maximumAmountIn(options.allowedSlippage));\n    var amountOut = toHex(trade.minimumAmountOut(options.allowedSlippage));\n    var path = trade.route.path.map(function (token) {\n      return token.address;\n    });\n    var deadline = \"0x\" + (Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16);\n    var useFeeOnTransfer = Boolean(options.feeOnTransfer);\n    var methodName;\n    var args;\n    var value;\n\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'; // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n\n          args = [amountOut, path, to, deadline];\n          value = amountIn;\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'; // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n\n          args = [amountIn, amountOut, path, to, deadline];\n          value = ZERO_HEX;\n        } else {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens' : 'swapExactTokensForTokens'; // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n\n          args = [amountIn, amountOut, path, to, deadline];\n          value = ZERO_HEX;\n        }\n\n        break;\n\n      case TradeType.EXACT_OUTPUT:\n        !!useFeeOnTransfer ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'EXACT_OUT_FOT') : invariant(false) : void 0;\n\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'; // (uint amountOut, address[] calldata path, address to, uint deadline)\n\n          args = [amountOut, path, to, deadline];\n          value = amountIn;\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'; // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n\n          args = [amountOut, amountIn, path, to, deadline];\n          value = ZERO_HEX;\n        } else {\n          methodName = 'swapTokensForExactTokens'; // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n\n          args = [amountOut, amountIn, path, to, deadline];\n          value = ZERO_HEX;\n        }\n\n        break;\n    }\n\n    return {\n      methodName: methodName,\n      args: args,\n      value: value\n    };\n  };\n\n  return Router;\n}();\n\nvar ERC20 = [{\n  constant: true,\n  inputs: [],\n  name: \"decimals\",\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}];\n\nvar _TOKEN_DECIMALS_CACHE;\n\nvar TOKEN_DECIMALS_CACHE = (_TOKEN_DECIMALS_CACHE = {}, _TOKEN_DECIMALS_CACHE[ChainId.MAINNET] = {\n  '0xE0B7927c4aF23765Cb51314A0E0521A9645F0E2A': 9 // DGD\n\n}, _TOKEN_DECIMALS_CACHE);\n/**\n * Contains methods for constructing instances of pairs and tokens from on-chain data.\n */\n\nvar Fetcher = /*#__PURE__*/function () {\n  /**\n   * Cannot be constructed.\n   */\n  function Fetcher() {}\n  /**\n   * Fetch information for a given token on the given chain, using the given ethers provider.\n   * @param chainId chain of the token\n   * @param address address of the token on the chain\n   * @param provider provider used to fetch the token\n   * @param symbol optional symbol of the token\n   * @param name optional name of the token\n   */\n\n\n  Fetcher.fetchTokenData = function fetchTokenData(chainId, address, provider, symbol, name) {\n    try {\n      var _TOKEN_DECIMALS_CACHE2, _TOKEN_DECIMALS_CACHE3;\n\n      var _temp3 = function _temp3(parsedDecimals) {\n        return new Token(chainId, address, parsedDecimals, symbol, name);\n      };\n\n      if (provider === undefined) provider = getDefaultProvider(getNetwork(chainId));\n\n      var _temp4 = typeof ((_TOKEN_DECIMALS_CACHE2 = TOKEN_DECIMALS_CACHE) === null || _TOKEN_DECIMALS_CACHE2 === void 0 ? void 0 : (_TOKEN_DECIMALS_CACHE3 = _TOKEN_DECIMALS_CACHE2[chainId]) === null || _TOKEN_DECIMALS_CACHE3 === void 0 ? void 0 : _TOKEN_DECIMALS_CACHE3[address]) === 'number';\n\n      return Promise.resolve(_temp4 ? _temp3(TOKEN_DECIMALS_CACHE[chainId][address]) : Promise.resolve(new Contract(address, ERC20, provider).decimals().then(function (decimals) {\n        var _TOKEN_DECIMALS_CACHE4, _extends2, _extends3;\n\n        TOKEN_DECIMALS_CACHE = _extends({}, TOKEN_DECIMALS_CACHE, (_extends3 = {}, _extends3[chainId] = _extends({}, (_TOKEN_DECIMALS_CACHE4 = TOKEN_DECIMALS_CACHE) === null || _TOKEN_DECIMALS_CACHE4 === void 0 ? void 0 : _TOKEN_DECIMALS_CACHE4[chainId], (_extends2 = {}, _extends2[address] = decimals, _extends2)), _extends3));\n        return decimals;\n      })).then(_temp3));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  /**\n   * Fetches information about a pair and constructs a pair from the given two tokens.\n   * @param tokenA first token\n   * @param tokenB second token\n   * @param provider the provider to use to fetch the data\n   */\n  ;\n\n  Fetcher.fetchPairData = function fetchPairData(tokenA, tokenB, provider) {\n    try {\n      if (provider === undefined) provider = getDefaultProvider(getNetwork(tokenA.chainId));\n      !(tokenA.chainId === tokenB.chainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_ID') : invariant(false) : void 0;\n      var address = Pair.getAddress(tokenA, tokenB);\n      return Promise.resolve(new Contract(address, IUniswapV2Pair.abi, provider).getReserves()).then(function (_ref) {\n        var reserves0 = _ref[0],\n            reserves1 = _ref[1];\n        var balances = tokenA.sortsBefore(tokenB) ? [reserves0, reserves1] : [reserves1, reserves0];\n        return new Pair(new TokenAmount(tokenA, balances[0]), new TokenAmount(tokenB, balances[1]));\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return Fetcher;\n}();\n\nexport { ChainId, Currency, CurrencyAmount, ETHER, FACTORY_ADDRESS, Fetcher, Fraction, INIT_CODE_HASH, InsufficientInputAmountError, InsufficientReservesError, MINIMUM_LIQUIDITY, Pair, Percent, Price, Rounding, Route, Router, Token, TokenAmount, Trade, TradeType, WETH, currencyEquals, inputOutputComparator, tradeComparator };","map":{"version":3,"sources":["/home/loser/pancake-swap-interface-v1/node_modules/@pancakeswap-libs/sdk/dist/sdk.esm.js"],"names":["JSBI","default","invariant","warning","getAddress","getCreate2Address","_Big","toFormat","_Decimal","keccak256","pack","Contract","getNetwork","getDefaultProvider","IUniswapV2Pair","_SOLIDITY_TYPE_MAXIMA","ChainId","TradeType","Rounding","FACTORY_ADDRESS","INIT_CODE_HASH","MINIMUM_LIQUIDITY","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_extends","assign","arguments","source","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","_construct","Parent","args","Class","a","push","Function","bind","instance","_isNativeFunction","fn","indexOf","_wrapNativeSuper","_cache","Map","undefined","TypeError","has","get","set","Wrapper","value","_assertThisInitialized","self","ReferenceError","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","slice","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","isArray","done","next","CAN_SET_PROTOTYPE","InsufficientReservesError","_Error","_this","isInsufficientReservesError","Error","InsufficientInputAmountError","_Error2","_this2","isInsufficientInputAmountError","validateSolidityTypeInstance","solidityType","greaterThanOrEqual","process","env","NODE_ENV","lessThanOrEqual","validateAndParseAddress","address","checksummedAddress","error","parseBigintIsh","bigintIsh","sqrt","y","z","x","greaterThan","add","divide","lessThan","notEqual","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","splice","pop","Currency","decimals","symbol","ETHER","_WETH","Token","_Currency","chainId","_proto","equals","other","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","WETH","MAINNET","BSCTESTNET","_toSignificantRoundin","_toFixedRounding","Decimal","Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","invert","otherParsed","equal","multiply","subtract","equalTo","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","precision","quotient","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","Big$1","CurrencyAmount","_Fraction","currency","amount","parsedAmount","exponentiate","ether","raw","toExact","TokenAmount","_CurrencyAmount","token","Price","baseCurrency","quoteCurrency","scalar","fromRoute","route","prices","_iterator","pairs","entries","_step","_step$value","pair","path","token0","reserve0","reserve1","reduce","accumulator","currentValue","fraction","quote","currencyAmount","adjusted","PAIR_ADDRESS_CACHE","Pair","tokenAmountA","tokenAmountB","tokenAmounts","liquidityToken","tokenA","tokenB","_PAIR_ADDRESS_CACHE","_PAIR_ADDRESS_CACHE$t","tokens","_PAIR_ADDRESS_CACHE2","_extends2","_extends3","involvesToken","token1","priceOf","token0Price","token1Price","reserveOf","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","Route","input","output","every","currentInput","_output","midPrice","_100_PERCENT","Percent","computePriceImpact","exactQuote","slippage","inputOutputComparator","b","tradeComparator","ioComp","priceImpact","wrappedAmount","wrappedCurrency","Trade","tradeType","amounts","nextPairs","EXACT_INPUT","_pair$getOutputAmount","nextPair","_i","_pair","_pair$getInputAmount","_nextPair","EXACT_OUTPUT","executionPrice","nextMidPrice","exactIn","amountIn","exactOut","amountOut","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","_temp","currentPairs","originalAmountIn","bestTrades","_ref","_ref$maxNumResults","maxNumResults","_ref$maxHops","maxHops","tokenOut","_pair$getOutputAmount2","concat","pairsExcludingThisPair","bestTradeExactOut","currencyIn","currencyAmountOut","_temp2","originalAmountOut","_ref2","_ref2$maxNumResults","_ref2$maxHops","tokenIn","_pair$getInputAmount2","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","to","recipient","allowedSlippage","map","deadline","Math","floor","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","ERC20","constant","inputs","outputs","type","payable","stateMutability","_TOKEN_DECIMALS_CACHE","TOKEN_DECIMALS_CACHE","Fetcher","fetchTokenData","provider","_TOKEN_DECIMALS_CACHE2","_TOKEN_DECIMALS_CACHE3","_temp3","parsedDecimals","_temp4","Promise","resolve","then","_TOKEN_DECIMALS_CACHE4","reject","fetchPairData","abi","getReserves","reserves0","reserves1","balances"],"mappings":"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","sourcesContent":["import JSBI from 'jsbi';\nexport { default as JSBI } from 'jsbi';\nimport invariant from 'tiny-invariant';\nimport warning from 'tiny-warning';\nimport { getAddress, getCreate2Address } from '@ethersproject/address';\nimport _Big from 'big.js';\nimport toFormat from 'toformat';\nimport _Decimal from 'decimal.js-light';\nimport { keccak256, pack } from '@ethersproject/solidity';\nimport { Contract } from '@ethersproject/contracts';\nimport { getNetwork } from '@ethersproject/networks';\nimport { getDefaultProvider } from '@ethersproject/providers';\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json';\n\nvar _SOLIDITY_TYPE_MAXIMA;\nvar ChainId;\n\n(function (ChainId) {\n  ChainId[ChainId[\"MAINNET\"] = 56] = \"MAINNET\";\n  ChainId[ChainId[\"BSCTESTNET\"] = 97] = \"BSCTESTNET\";\n})(ChainId || (ChainId = {}));\n\nvar TradeType;\n\n(function (TradeType) {\n  TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\n  TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\n})(TradeType || (TradeType = {}));\n\nvar Rounding;\n\n(function (Rounding) {\n  Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\n  Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\n  Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\n})(Rounding || (Rounding = {}));\n\nvar FACTORY_ADDRESS = '0xeCC28296F247039e4DB1B9020B5CFd88d894D038';\nvar INIT_CODE_HASH = '0x822ff3c2d51b4f9c46f38ae96412ff10bbd84843877801fd574c65123ea4d705';\nvar MINIMUM_LIQUIDITY = /*#__PURE__*/JSBI.BigInt(1000); // exports for internal consumption\n\nvar ZERO = /*#__PURE__*/JSBI.BigInt(0);\nvar ONE = /*#__PURE__*/JSBI.BigInt(1);\nvar TWO = /*#__PURE__*/JSBI.BigInt(2);\nvar THREE = /*#__PURE__*/JSBI.BigInt(3);\nvar FIVE = /*#__PURE__*/JSBI.BigInt(5);\nvar TEN = /*#__PURE__*/JSBI.BigInt(10);\nvar _100 = /*#__PURE__*/JSBI.BigInt(100);\nvar _997 = /*#__PURE__*/JSBI.BigInt(997);\nvar _1000 = /*#__PURE__*/JSBI.BigInt(1000);\nvar SolidityType;\n\n(function (SolidityType) {\n  SolidityType[\"uint8\"] = \"uint8\";\n  SolidityType[\"uint256\"] = \"uint256\";\n})(SolidityType || (SolidityType = {}));\n\nvar SOLIDITY_TYPE_MAXIMA = (_SOLIDITY_TYPE_MAXIMA = {}, _SOLIDITY_TYPE_MAXIMA[SolidityType.uint8] = /*#__PURE__*/JSBI.BigInt('0xff'), _SOLIDITY_TYPE_MAXIMA[SolidityType.uint256] = /*#__PURE__*/JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'), _SOLIDITY_TYPE_MAXIMA);\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\n// see https://stackoverflow.com/a/41102306\nvar CAN_SET_PROTOTYPE = ('setPrototypeOf' in Object);\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\n\nvar InsufficientReservesError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(InsufficientReservesError, _Error);\n\n  function InsufficientReservesError() {\n    var _this;\n\n    _this = _Error.call(this) || this;\n    _this.isInsufficientReservesError = true;\n    _this.name = _this.constructor.name;\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(_assertThisInitialized(_this), (this instanceof InsufficientReservesError ? this.constructor : void 0).prototype);\n    return _this;\n  }\n\n  return InsufficientReservesError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\n\nvar InsufficientInputAmountError = /*#__PURE__*/function (_Error2) {\n  _inheritsLoose(InsufficientInputAmountError, _Error2);\n\n  function InsufficientInputAmountError() {\n    var _this2;\n\n    _this2 = _Error2.call(this) || this;\n    _this2.isInsufficientInputAmountError = true;\n    _this2.name = _this2.constructor.name;\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(_assertThisInitialized(_this2), (this instanceof InsufficientInputAmountError ? this.constructor : void 0).prototype);\n    return _this2;\n  }\n\n  return InsufficientInputAmountError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction validateSolidityTypeInstance(value, solidityType) {\n  !JSBI.greaterThanOrEqual(value, ZERO) ? process.env.NODE_ENV !== \"production\" ? invariant(false, value + \" is not a \" + solidityType + \".\") : invariant(false) : void 0;\n  !JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]) ? process.env.NODE_ENV !== \"production\" ? invariant(false, value + \" is not a \" + solidityType + \".\") : invariant(false) : void 0;\n} // warns if addresses are not checksummed\n\nfunction validateAndParseAddress(address) {\n  try {\n    var checksummedAddress = getAddress(address);\n    process.env.NODE_ENV !== \"production\" ? warning(address === checksummedAddress, address + \" is not checksummed.\") : void 0;\n    return checksummedAddress;\n  } catch (error) {\n     process.env.NODE_ENV !== \"production\" ? invariant(false, address + \" is not a valid address.\") : invariant(false) ;\n  }\n}\nfunction parseBigintIsh(bigintIsh) {\n  return bigintIsh instanceof JSBI ? bigintIsh : typeof bigintIsh === 'bigint' ? JSBI.BigInt(bigintIsh.toString()) : JSBI.BigInt(bigintIsh);\n} // mock the on-chain sqrt function\n\nfunction sqrt(y) {\n  validateSolidityTypeInstance(y, SolidityType.uint256);\n  var z = ZERO;\n  var x;\n\n  if (JSBI.greaterThan(y, THREE)) {\n    z = y;\n    x = JSBI.add(JSBI.divide(y, TWO), ONE);\n\n    while (JSBI.lessThan(x, z)) {\n      z = x;\n      x = JSBI.divide(JSBI.add(JSBI.divide(y, x), x), TWO);\n    }\n  } else if (JSBI.notEqual(y, ZERO)) {\n    z = ONE;\n  }\n\n  return z;\n} // given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\n\nfunction sortedInsert(items, add, maxSize, comparator) {\n  !(maxSize > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MAX_SIZE_ZERO') : invariant(false) : void 0; // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n\n  !(items.length <= maxSize) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ITEMS_SIZE') : invariant(false) : void 0; // short circuit first item add\n\n  if (items.length === 0) {\n    items.push(add);\n    return null;\n  } else {\n    var isFull = items.length === maxSize; // short circuit if full and the additional item does not come before the last item\n\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add;\n    }\n\n    var lo = 0,\n        hi = items.length;\n\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n\n    items.splice(lo, 0, add);\n    return isFull ? items.pop() : null;\n  }\n}\n\n/**\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\n *\n * The only instance of the base class `Currency` is Ether.\n */\n\nvar Currency =\n/**\n * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.ETHER`.\n * @param decimals decimals of the currency\n * @param symbol symbol of the currency\n * @param name of the currency\n */\nfunction Currency(decimals, symbol, name) {\n  validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8);\n  this.decimals = decimals;\n  this.symbol = symbol;\n  this.name = name;\n};\n/**\n * The only instance of the base class `Currency`.\n */\n\nCurrency.ETHER = /*#__PURE__*/new Currency(18, 'BNB', 'Binance');\nvar ETHER = Currency.ETHER;\n\nvar _WETH;\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\n\nvar Token = /*#__PURE__*/function (_Currency) {\n  _inheritsLoose(Token, _Currency);\n\n  function Token(chainId, address, decimals, symbol, name) {\n    var _this;\n\n    _this = _Currency.call(this, decimals, symbol, name) || this;\n    _this.chainId = chainId;\n    _this.address = validateAndParseAddress(address);\n    return _this;\n  }\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n\n\n  var _proto = Token.prototype;\n\n  _proto.equals = function equals(other) {\n    // short circuit on reference equality\n    if (this === other) {\n      return true;\n    }\n\n    return this.chainId === other.chainId && this.address === other.address;\n  }\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  ;\n\n  _proto.sortsBefore = function sortsBefore(other) {\n    !(this.chainId === other.chainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_IDS') : invariant(false) : void 0;\n    !(this.address !== other.address) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ADDRESSES') : invariant(false) : void 0;\n    return this.address.toLowerCase() < other.address.toLowerCase();\n  };\n\n  return Token;\n}(Currency);\n/**\n * Compares two currencies for equality\n */\n\nfunction currencyEquals(currencyA, currencyB) {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB);\n  } else if (currencyA instanceof Token) {\n    return false;\n  } else if (currencyB instanceof Token) {\n    return false;\n  } else {\n    return currencyA === currencyB;\n  }\n}\nvar WETH = (_WETH = {}, _WETH[ChainId.MAINNET] = /*#__PURE__*/new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'), _WETH[ChainId.BSCTESTNET] = /*#__PURE__*/new Token(ChainId.BSCTESTNET, '0xaE8E19eFB41e7b96815649A6a60785e1fbA84C1e', 18, 'WBNB', 'Wrapped BNB'), _WETH);\n\nvar _toSignificantRoundin, _toFixedRounding;\nvar Decimal = /*#__PURE__*/toFormat(_Decimal);\nvar Big = /*#__PURE__*/toFormat(_Big);\nvar toSignificantRounding = (_toSignificantRoundin = {}, _toSignificantRoundin[Rounding.ROUND_DOWN] = Decimal.ROUND_DOWN, _toSignificantRoundin[Rounding.ROUND_HALF_UP] = Decimal.ROUND_HALF_UP, _toSignificantRoundin[Rounding.ROUND_UP] = Decimal.ROUND_UP, _toSignificantRoundin);\nvar toFixedRounding = (_toFixedRounding = {}, _toFixedRounding[Rounding.ROUND_DOWN] = 0, _toFixedRounding[Rounding.ROUND_HALF_UP] = 1, _toFixedRounding[Rounding.ROUND_UP] = 3, _toFixedRounding);\nvar Fraction = /*#__PURE__*/function () {\n  function Fraction(numerator, denominator) {\n    if (denominator === void 0) {\n      denominator = ONE;\n    }\n\n    this.numerator = parseBigintIsh(numerator);\n    this.denominator = parseBigintIsh(denominator);\n  } // performs floor division\n\n\n  var _proto = Fraction.prototype;\n\n  _proto.invert = function invert() {\n    return new Fraction(this.denominator, this.numerator);\n  };\n\n  _proto.add = function add(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(JSBI.add(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.subtract = function subtract(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(JSBI.subtract(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.lessThan = function lessThan(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.lessThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.equalTo = function equalTo(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.equal(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.greaterThan = function greaterThan(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.greaterThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.multiply = function multiply(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return new Fraction(JSBI.multiply(this.numerator, otherParsed.numerator), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.divide = function divide(other) {\n    var otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return new Fraction(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(this.denominator, otherParsed.numerator));\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n\n    !Number.isInteger(significantDigits) ? process.env.NODE_ENV !== \"production\" ? invariant(false, significantDigits + \" is not an integer.\") : invariant(false) : void 0;\n    !(significantDigits > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, significantDigits + \" is not positive.\") : invariant(false) : void 0;\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    });\n    var quotient = new Decimal(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n\n    !Number.isInteger(decimalPlaces) ? process.env.NODE_ENV !== \"production\" ? invariant(false, decimalPlaces + \" is not an integer.\") : invariant(false) : void 0;\n    !(decimalPlaces >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, decimalPlaces + \" is negative.\") : invariant(false) : void 0;\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  };\n\n  _createClass(Fraction, [{\n    key: \"quotient\",\n    get: function get() {\n      return JSBI.divide(this.numerator, this.denominator);\n    } // remainder after floor division\n\n  }, {\n    key: \"remainder\",\n    get: function get() {\n      return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator);\n    }\n  }]);\n\n  return Fraction;\n}();\n\nvar Big$1 = /*#__PURE__*/toFormat(_Big);\nvar CurrencyAmount = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(CurrencyAmount, _Fraction);\n\n  // amount _must_ be raw, i.e. in the native representation\n  function CurrencyAmount(currency, amount) {\n    var _this;\n\n    var parsedAmount = parseBigintIsh(amount);\n    validateSolidityTypeInstance(parsedAmount, SolidityType.uint256);\n    _this = _Fraction.call(this, parsedAmount, JSBI.exponentiate(TEN, JSBI.BigInt(currency.decimals))) || this;\n    _this.currency = currency;\n    return _this;\n  }\n  /**\n   * Helper that calls the constructor with the ETHER currency\n   * @param amount ether amount in wei\n   */\n\n\n  CurrencyAmount.ether = function ether(amount) {\n    return new CurrencyAmount(ETHER, amount);\n  };\n\n  var _proto = CurrencyAmount.prototype;\n\n  _proto.add = function add(other) {\n    !currencyEquals(this.currency, other.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return new CurrencyAmount(this.currency, JSBI.add(this.raw, other.raw));\n  };\n\n  _proto.subtract = function subtract(other) {\n    !currencyEquals(this.currency, other.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return new CurrencyAmount(this.currency, JSBI.subtract(this.raw, other.raw));\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n\n    return _Fraction.prototype.toSignificant.call(this, significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = this.currency.decimals;\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n\n    !(decimalPlaces <= this.currency.decimals) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DECIMALS') : invariant(false) : void 0;\n    return _Fraction.prototype.toFixed.call(this, decimalPlaces, format, rounding);\n  };\n\n  _proto.toExact = function toExact(format) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    Big$1.DP = this.currency.decimals;\n    return new Big$1(this.numerator.toString()).div(this.denominator.toString()).toFormat(format);\n  };\n\n  _createClass(CurrencyAmount, [{\n    key: \"raw\",\n    get: function get() {\n      return this.numerator;\n    }\n  }]);\n\n  return CurrencyAmount;\n}(Fraction);\n\nvar TokenAmount = /*#__PURE__*/function (_CurrencyAmount) {\n  _inheritsLoose(TokenAmount, _CurrencyAmount);\n\n  // amount _must_ be raw, i.e. in the native representation\n  function TokenAmount(token, amount) {\n    var _this;\n\n    _this = _CurrencyAmount.call(this, token, amount) || this;\n    _this.token = token;\n    return _this;\n  }\n\n  var _proto = TokenAmount.prototype;\n\n  _proto.add = function add(other) {\n    !this.token.equals(other.token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return new TokenAmount(this.token, JSBI.add(this.raw, other.raw));\n  };\n\n  _proto.subtract = function subtract(other) {\n    !this.token.equals(other.token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw));\n  };\n\n  return TokenAmount;\n}(CurrencyAmount);\n\nvar Price = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(Price, _Fraction);\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  function Price(baseCurrency, quoteCurrency, denominator, numerator) {\n    var _this;\n\n    _this = _Fraction.call(this, numerator, denominator) || this;\n    _this.baseCurrency = baseCurrency;\n    _this.quoteCurrency = quoteCurrency;\n    _this.scalar = new Fraction(JSBI.exponentiate(TEN, JSBI.BigInt(baseCurrency.decimals)), JSBI.exponentiate(TEN, JSBI.BigInt(quoteCurrency.decimals)));\n    return _this;\n  }\n\n  Price.fromRoute = function fromRoute(route) {\n    var prices = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(route.pairs.entries()), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          i = _step$value[0],\n          pair = _step$value[1];\n      prices.push(route.path[i].equals(pair.token0) ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.raw, pair.reserve1.raw) : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.raw, pair.reserve0.raw));\n    }\n\n    return prices.slice(1).reduce(function (accumulator, currentValue) {\n      return accumulator.multiply(currentValue);\n    }, prices[0]);\n  };\n\n  var _proto = Price.prototype;\n\n  _proto.invert = function invert() {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);\n  };\n\n  _proto.multiply = function multiply(other) {\n    !currencyEquals(this.quoteCurrency, other.baseCurrency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    var fraction = _Fraction.prototype.multiply.call(this, other);\n\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator);\n  } // performs floor division on overflow\n  ;\n\n  _proto.quote = function quote(currencyAmount) {\n    !currencyEquals(currencyAmount.currency, this.baseCurrency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    if (this.quoteCurrency instanceof Token) {\n      return new TokenAmount(this.quoteCurrency, _Fraction.prototype.multiply.call(this, currencyAmount.raw).quotient);\n    }\n\n    return CurrencyAmount.ether(_Fraction.prototype.multiply.call(this, currencyAmount.raw).quotient);\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n\n    return this.adjusted.toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 4;\n    }\n\n    return this.adjusted.toFixed(decimalPlaces, format, rounding);\n  };\n\n  _createClass(Price, [{\n    key: \"raw\",\n    get: function get() {\n      return new Fraction(this.numerator, this.denominator);\n    }\n  }, {\n    key: \"adjusted\",\n    get: function get() {\n      return _Fraction.prototype.multiply.call(this, this.scalar);\n    }\n  }]);\n\n  return Price;\n}(Fraction);\n\nvar PAIR_ADDRESS_CACHE = {};\nvar Pair = /*#__PURE__*/function () {\n  function Pair(tokenAmountA, tokenAmountB) {\n    var tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n    ? [tokenAmountA, tokenAmountB] : [tokenAmountB, tokenAmountA];\n    this.liquidityToken = new Token(tokenAmounts[0].token.chainId, Pair.getAddress(tokenAmounts[0].token, tokenAmounts[1].token), 18, 'UNI-V2', 'Uniswap V2');\n    this.tokenAmounts = tokenAmounts;\n  }\n\n  Pair.getAddress = function getAddress(tokenA, tokenB) {\n    var _PAIR_ADDRESS_CACHE, _PAIR_ADDRESS_CACHE$t;\n\n    var tokens = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]; // does safety checks\n\n    if (((_PAIR_ADDRESS_CACHE = PAIR_ADDRESS_CACHE) === null || _PAIR_ADDRESS_CACHE === void 0 ? void 0 : (_PAIR_ADDRESS_CACHE$t = _PAIR_ADDRESS_CACHE[tokens[0].address]) === null || _PAIR_ADDRESS_CACHE$t === void 0 ? void 0 : _PAIR_ADDRESS_CACHE$t[tokens[1].address]) === undefined) {\n      var _PAIR_ADDRESS_CACHE2, _extends2, _extends3;\n\n      PAIR_ADDRESS_CACHE = _extends({}, PAIR_ADDRESS_CACHE, (_extends3 = {}, _extends3[tokens[0].address] = _extends({}, (_PAIR_ADDRESS_CACHE2 = PAIR_ADDRESS_CACHE) === null || _PAIR_ADDRESS_CACHE2 === void 0 ? void 0 : _PAIR_ADDRESS_CACHE2[tokens[0].address], (_extends2 = {}, _extends2[tokens[1].address] = getCreate2Address(FACTORY_ADDRESS, keccak256(['bytes'], [pack(['address', 'address'], [tokens[0].address, tokens[1].address])]), INIT_CODE_HASH), _extends2)), _extends3));\n    }\n\n    return PAIR_ADDRESS_CACHE[tokens[0].address][tokens[1].address];\n  }\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  ;\n\n  var _proto = Pair.prototype;\n\n  _proto.involvesToken = function involvesToken(token) {\n    return token.equals(this.token0) || token.equals(this.token1);\n  }\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  ;\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  _proto.priceOf = function priceOf(token) {\n    !this.involvesToken(token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return token.equals(this.token0) ? this.token0Price : this.token1Price;\n  }\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  ;\n\n  _proto.reserveOf = function reserveOf(token) {\n    !this.involvesToken(token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1;\n  };\n\n  _proto.getOutputAmount = function getOutputAmount(inputAmount) {\n    !this.involvesToken(inputAmount.token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO)) {\n      throw new InsufficientReservesError();\n    }\n\n    var inputReserve = this.reserveOf(inputAmount.token);\n    var outputReserve = this.reserveOf(inputAmount.token.equals(this.token0) ? this.token1 : this.token0);\n    var inputAmountWithFee = JSBI.multiply(inputAmount.raw, _997);\n    var numerator = JSBI.multiply(inputAmountWithFee, outputReserve.raw);\n    var denominator = JSBI.add(JSBI.multiply(inputReserve.raw, _1000), inputAmountWithFee);\n    var outputAmount = new TokenAmount(inputAmount.token.equals(this.token0) ? this.token1 : this.token0, JSBI.divide(numerator, denominator));\n\n    if (JSBI.equal(outputAmount.raw, ZERO)) {\n      throw new InsufficientInputAmountError();\n    }\n\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))];\n  };\n\n  _proto.getInputAmount = function getInputAmount(outputAmount) {\n    !this.involvesToken(outputAmount.token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO) || JSBI.greaterThanOrEqual(outputAmount.raw, this.reserveOf(outputAmount.token).raw)) {\n      throw new InsufficientReservesError();\n    }\n\n    var outputReserve = this.reserveOf(outputAmount.token);\n    var inputReserve = this.reserveOf(outputAmount.token.equals(this.token0) ? this.token1 : this.token0);\n    var numerator = JSBI.multiply(JSBI.multiply(inputReserve.raw, outputAmount.raw), _1000);\n    var denominator = JSBI.multiply(JSBI.subtract(outputReserve.raw, outputAmount.raw), _997);\n    var inputAmount = new TokenAmount(outputAmount.token.equals(this.token0) ? this.token1 : this.token0, JSBI.add(JSBI.divide(numerator, denominator), ONE));\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))];\n  };\n\n  _proto.getLiquidityMinted = function getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB) {\n    !totalSupply.token.equals(this.liquidityToken) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LIQUIDITY') : invariant(false) : void 0;\n    var tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n    ? [tokenAmountA, tokenAmountB] : [tokenAmountB, tokenAmountA];\n    !(tokenAmounts[0].token.equals(this.token0) && tokenAmounts[1].token.equals(this.token1)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    var liquidity;\n\n    if (JSBI.equal(totalSupply.raw, ZERO)) {\n      liquidity = JSBI.subtract(sqrt(JSBI.multiply(tokenAmounts[0].raw, tokenAmounts[1].raw)), MINIMUM_LIQUIDITY);\n    } else {\n      var amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].raw, totalSupply.raw), this.reserve0.raw);\n      var amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].raw, totalSupply.raw), this.reserve1.raw);\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1;\n    }\n\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError();\n    }\n\n    return new TokenAmount(this.liquidityToken, liquidity);\n  };\n\n  _proto.getLiquidityValue = function getLiquidityValue(token, totalSupply, liquidity, feeOn, kLast) {\n    if (feeOn === void 0) {\n      feeOn = false;\n    }\n\n    !this.involvesToken(token) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n    !totalSupply.token.equals(this.liquidityToken) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOTAL_SUPPLY') : invariant(false) : void 0;\n    !liquidity.token.equals(this.liquidityToken) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LIQUIDITY') : invariant(false) : void 0;\n    !JSBI.lessThanOrEqual(liquidity.raw, totalSupply.raw) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LIQUIDITY') : invariant(false) : void 0;\n    var totalSupplyAdjusted;\n\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply;\n    } else {\n      !!!kLast ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'K_LAST') : invariant(false) : void 0;\n      var kLastParsed = parseBigintIsh(kLast);\n\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        var rootK = sqrt(JSBI.multiply(this.reserve0.raw, this.reserve1.raw));\n        var rootKLast = sqrt(kLastParsed);\n\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          var numerator = JSBI.multiply(totalSupply.raw, JSBI.subtract(rootK, rootKLast));\n          var denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast);\n          var feeLiquidity = JSBI.divide(numerator, denominator);\n          totalSupplyAdjusted = totalSupply.add(new TokenAmount(this.liquidityToken, feeLiquidity));\n        } else {\n          totalSupplyAdjusted = totalSupply;\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply;\n      }\n    }\n\n    return new TokenAmount(token, JSBI.divide(JSBI.multiply(liquidity.raw, this.reserveOf(token).raw), totalSupplyAdjusted.raw));\n  };\n\n  _createClass(Pair, [{\n    key: \"token0Price\",\n    get: function get() {\n      return new Price(this.token0, this.token1, this.tokenAmounts[0].raw, this.tokenAmounts[1].raw);\n    }\n    /**\n     * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n     */\n\n  }, {\n    key: \"token1Price\",\n    get: function get() {\n      return new Price(this.token1, this.token0, this.tokenAmounts[1].raw, this.tokenAmounts[0].raw);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.token0.chainId;\n    }\n  }, {\n    key: \"token0\",\n    get: function get() {\n      return this.tokenAmounts[0].token;\n    }\n  }, {\n    key: \"token1\",\n    get: function get() {\n      return this.tokenAmounts[1].token;\n    }\n  }, {\n    key: \"reserve0\",\n    get: function get() {\n      return this.tokenAmounts[0];\n    }\n  }, {\n    key: \"reserve1\",\n    get: function get() {\n      return this.tokenAmounts[1];\n    }\n  }]);\n\n  return Pair;\n}();\n\nvar Route = /*#__PURE__*/function () {\n  function Route(pairs, input, output) {\n    !(pairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PAIRS') : invariant(false) : void 0;\n    !pairs.every(function (pair) {\n      return pair.chainId === pairs[0].chainId;\n    }) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_IDS') : invariant(false) : void 0;\n    !(input instanceof Token && pairs[0].involvesToken(input) || input === ETHER && pairs[0].involvesToken(WETH[pairs[0].chainId])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INPUT') : invariant(false) : void 0;\n    !(typeof output === 'undefined' || output instanceof Token && pairs[pairs.length - 1].involvesToken(output) || output === ETHER && pairs[pairs.length - 1].involvesToken(WETH[pairs[0].chainId])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OUTPUT') : invariant(false) : void 0;\n    var path = [input instanceof Token ? input : WETH[pairs[0].chainId]];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(pairs.entries()), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          i = _step$value[0],\n          pair = _step$value[1];\n      var currentInput = path[i];\n      !(currentInput.equals(pair.token0) || currentInput.equals(pair.token1)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PATH') : invariant(false) : void 0;\n\n      var _output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0;\n\n      path.push(_output);\n    }\n\n    this.pairs = pairs;\n    this.path = path;\n    this.midPrice = Price.fromRoute(this);\n    this.input = input;\n    this.output = output !== null && output !== void 0 ? output : path[path.length - 1];\n  }\n\n  _createClass(Route, [{\n    key: \"chainId\",\n    get: function get() {\n      return this.pairs[0].chainId;\n    }\n  }]);\n\n  return Route;\n}();\n\nvar _100_PERCENT = /*#__PURE__*/new Fraction(_100);\n\nvar Percent = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(Percent, _Fraction);\n\n  function Percent() {\n    return _Fraction.apply(this, arguments) || this;\n  }\n\n  var _proto = Percent.prototype;\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 5;\n    }\n\n    return this.multiply(_100_PERCENT).toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 2;\n    }\n\n    return this.multiply(_100_PERCENT).toFixed(decimalPlaces, format, rounding);\n  };\n\n  return Percent;\n}(Fraction);\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\n\nfunction computePriceImpact(midPrice, inputAmount, outputAmount) {\n  var exactQuote = midPrice.raw.multiply(inputAmount.raw); // calculate slippage := (exactQuote - outputAmount) / exactQuote\n\n  var slippage = exactQuote.subtract(outputAmount.raw).divide(exactQuote);\n  return new Percent(slippage.numerator, slippage.denominator);\n} // comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\n\n\nfunction inputOutputComparator(a, b) {\n  // must have same input and output token for comparison\n  !currencyEquals(a.inputAmount.currency, b.inputAmount.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INPUT_CURRENCY') : invariant(false) : void 0;\n  !currencyEquals(a.outputAmount.currency, b.outputAmount.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OUTPUT_CURRENCY') : invariant(false) : void 0;\n\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0;\n    } // trade A requires less input than trade B, so A should come first\n\n\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n} // extension of the input output comparator that also considers other dimensions of the trade in ranking them\n\nfunction tradeComparator(a, b) {\n  var ioComp = inputOutputComparator(a, b);\n\n  if (ioComp !== 0) {\n    return ioComp;\n  } // consider lowest slippage next, since these are less likely to fail\n\n\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1;\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1;\n  } // finally consider the number of hops since each hop costs gas\n\n\n  return a.route.path.length - b.route.path.length;\n}\n/**\n * Given a currency amount and a chain ID, returns the equivalent representation as the token amount.\n * In other words, if the currency is ETHER, returns the WETH token amount for the given chain. Otherwise, returns\n * the input currency amount.\n */\n\nfunction wrappedAmount(currencyAmount, chainId) {\n  if (currencyAmount instanceof TokenAmount) return currencyAmount;\n  if (currencyAmount.currency === ETHER) return new TokenAmount(WETH[chainId], currencyAmount.raw);\n   process.env.NODE_ENV !== \"production\" ? invariant(false, 'CURRENCY') : invariant(false) ;\n}\n\nfunction wrappedCurrency(currency, chainId) {\n  if (currency instanceof Token) return currency;\n  if (currency === ETHER) return WETH[chainId];\n   process.env.NODE_ENV !== \"production\" ? invariant(false, 'CURRENCY') : invariant(false) ;\n}\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\n\n\nvar Trade = /*#__PURE__*/function () {\n  function Trade(route, amount, tradeType) {\n    var amounts = new Array(route.path.length);\n    var nextPairs = new Array(route.pairs.length);\n\n    if (tradeType === TradeType.EXACT_INPUT) {\n      !currencyEquals(amount.currency, route.input) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INPUT') : invariant(false) : void 0;\n      amounts[0] = wrappedAmount(amount, route.chainId);\n\n      for (var i = 0; i < route.path.length - 1; i++) {\n        var pair = route.pairs[i];\n\n        var _pair$getOutputAmount = pair.getOutputAmount(amounts[i]),\n            outputAmount = _pair$getOutputAmount[0],\n            nextPair = _pair$getOutputAmount[1];\n\n        amounts[i + 1] = outputAmount;\n        nextPairs[i] = nextPair;\n      }\n    } else {\n      !currencyEquals(amount.currency, route.output) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OUTPUT') : invariant(false) : void 0;\n      amounts[amounts.length - 1] = wrappedAmount(amount, route.chainId);\n\n      for (var _i = route.path.length - 1; _i > 0; _i--) {\n        var _pair = route.pairs[_i - 1];\n\n        var _pair$getInputAmount = _pair.getInputAmount(amounts[_i]),\n            inputAmount = _pair$getInputAmount[0],\n            _nextPair = _pair$getInputAmount[1];\n\n        amounts[_i - 1] = inputAmount;\n        nextPairs[_i - 1] = _nextPair;\n      }\n    }\n\n    this.route = route;\n    this.tradeType = tradeType;\n    this.inputAmount = tradeType === TradeType.EXACT_INPUT ? amount : route.input === ETHER ? CurrencyAmount.ether(amounts[0].raw) : amounts[0];\n    this.outputAmount = tradeType === TradeType.EXACT_OUTPUT ? amount : route.output === ETHER ? CurrencyAmount.ether(amounts[amounts.length - 1].raw) : amounts[amounts.length - 1];\n    this.executionPrice = new Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.raw, this.outputAmount.raw);\n    this.nextMidPrice = Price.fromRoute(new Route(nextPairs, route.input));\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount);\n  }\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n\n\n  Trade.exactIn = function exactIn(route, amountIn) {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT);\n  }\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  ;\n\n  Trade.exactOut = function exactOut(route, amountOut) {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT);\n  }\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  ;\n\n  var _proto = Trade.prototype;\n\n  _proto.minimumAmountOut = function minimumAmountOut(slippageTolerance) {\n    !!slippageTolerance.lessThan(ZERO) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'SLIPPAGE_TOLERANCE') : invariant(false) : void 0;\n\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount;\n    } else {\n      var slippageAdjustedAmountOut = new Fraction(ONE).add(slippageTolerance).invert().multiply(this.outputAmount.raw).quotient;\n      return this.outputAmount instanceof TokenAmount ? new TokenAmount(this.outputAmount.token, slippageAdjustedAmountOut) : CurrencyAmount.ether(slippageAdjustedAmountOut);\n    }\n  }\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  ;\n\n  _proto.maximumAmountIn = function maximumAmountIn(slippageTolerance) {\n    !!slippageTolerance.lessThan(ZERO) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'SLIPPAGE_TOLERANCE') : invariant(false) : void 0;\n\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount;\n    } else {\n      var slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.raw).quotient;\n      return this.inputAmount instanceof TokenAmount ? new TokenAmount(this.inputAmount.token, slippageAdjustedAmountIn) : CurrencyAmount.ether(slippageAdjustedAmountIn);\n    }\n  }\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  ;\n\n  Trade.bestTradeExactIn = function bestTradeExactIn(pairs, currencyAmountIn, currencyOut, _temp, // used in recursion.\n  currentPairs, originalAmountIn, bestTrades) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$maxNumResults = _ref.maxNumResults,\n        maxNumResults = _ref$maxNumResults === void 0 ? 3 : _ref$maxNumResults,\n        _ref$maxHops = _ref.maxHops,\n        maxHops = _ref$maxHops === void 0 ? 3 : _ref$maxHops;\n\n    if (currentPairs === void 0) {\n      currentPairs = [];\n    }\n\n    if (originalAmountIn === void 0) {\n      originalAmountIn = currencyAmountIn;\n    }\n\n    if (bestTrades === void 0) {\n      bestTrades = [];\n    }\n\n    !(pairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PAIRS') : invariant(false) : void 0;\n    !(maxHops > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MAX_HOPS') : invariant(false) : void 0;\n    !(originalAmountIn === currencyAmountIn || currentPairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INVALID_RECURSION') : invariant(false) : void 0;\n    var chainId = currencyAmountIn instanceof TokenAmount ? currencyAmountIn.token.chainId : currencyOut instanceof Token ? currencyOut.chainId : undefined;\n    !(chainId !== undefined) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_ID') : invariant(false) : void 0;\n    var amountIn = wrappedAmount(currencyAmountIn, chainId);\n    var tokenOut = wrappedCurrency(currencyOut, chainId);\n\n    for (var i = 0; i < pairs.length; i++) {\n      var pair = pairs[i]; // pair irrelevant\n\n      if (!pair.token0.equals(amountIn.token) && !pair.token1.equals(amountIn.token)) continue;\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue;\n      var amountOut = void 0;\n\n      try {\n        ;\n\n        var _pair$getOutputAmount2 = pair.getOutputAmount(amountIn);\n\n        amountOut = _pair$getOutputAmount2[0];\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue;\n        }\n\n        throw error;\n      } // we have arrived at the output token, so this is the final trade of one of the paths\n\n\n      if (amountOut.token.equals(tokenOut)) {\n        sortedInsert(bestTrades, new Trade(new Route([].concat(currentPairs, [pair]), originalAmountIn.currency, currencyOut), originalAmountIn, TradeType.EXACT_INPUT), maxNumResults, tradeComparator);\n      } else if (maxHops > 1 && pairs.length > 1) {\n        var pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length)); // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n\n        Trade.bestTradeExactIn(pairsExcludingThisPair, amountOut, currencyOut, {\n          maxNumResults: maxNumResults,\n          maxHops: maxHops - 1\n        }, [].concat(currentPairs, [pair]), originalAmountIn, bestTrades);\n      }\n    }\n\n    return bestTrades;\n  }\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param currencyAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  ;\n\n  Trade.bestTradeExactOut = function bestTradeExactOut(pairs, currencyIn, currencyAmountOut, _temp2, // used in recursion.\n  currentPairs, originalAmountOut, bestTrades) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$maxNumResults = _ref2.maxNumResults,\n        maxNumResults = _ref2$maxNumResults === void 0 ? 3 : _ref2$maxNumResults,\n        _ref2$maxHops = _ref2.maxHops,\n        maxHops = _ref2$maxHops === void 0 ? 3 : _ref2$maxHops;\n\n    if (currentPairs === void 0) {\n      currentPairs = [];\n    }\n\n    if (originalAmountOut === void 0) {\n      originalAmountOut = currencyAmountOut;\n    }\n\n    if (bestTrades === void 0) {\n      bestTrades = [];\n    }\n\n    !(pairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PAIRS') : invariant(false) : void 0;\n    !(maxHops > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MAX_HOPS') : invariant(false) : void 0;\n    !(originalAmountOut === currencyAmountOut || currentPairs.length > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INVALID_RECURSION') : invariant(false) : void 0;\n    var chainId = currencyAmountOut instanceof TokenAmount ? currencyAmountOut.token.chainId : currencyIn instanceof Token ? currencyIn.chainId : undefined;\n    !(chainId !== undefined) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_ID') : invariant(false) : void 0;\n    var amountOut = wrappedAmount(currencyAmountOut, chainId);\n    var tokenIn = wrappedCurrency(currencyIn, chainId);\n\n    for (var i = 0; i < pairs.length; i++) {\n      var pair = pairs[i]; // pair irrelevant\n\n      if (!pair.token0.equals(amountOut.token) && !pair.token1.equals(amountOut.token)) continue;\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue;\n      var amountIn = void 0;\n\n      try {\n        ;\n\n        var _pair$getInputAmount2 = pair.getInputAmount(amountOut);\n\n        amountIn = _pair$getInputAmount2[0];\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue;\n        }\n\n        throw error;\n      } // we have arrived at the input token, so this is the first trade of one of the paths\n\n\n      if (amountIn.token.equals(tokenIn)) {\n        sortedInsert(bestTrades, new Trade(new Route([pair].concat(currentPairs), currencyIn, originalAmountOut.currency), originalAmountOut, TradeType.EXACT_OUTPUT), maxNumResults, tradeComparator);\n      } else if (maxHops > 1 && pairs.length > 1) {\n        var pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length)); // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n\n        Trade.bestTradeExactOut(pairsExcludingThisPair, currencyIn, amountIn, {\n          maxNumResults: maxNumResults,\n          maxHops: maxHops - 1\n        }, [pair].concat(currentPairs), originalAmountOut, bestTrades);\n      }\n    }\n\n    return bestTrades;\n  };\n\n  return Trade;\n}();\n\nfunction toHex(currencyAmount) {\n  return \"0x\" + currencyAmount.raw.toString(16);\n}\n\nvar ZERO_HEX = '0x0';\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\n\nvar Router = /*#__PURE__*/function () {\n  /**\n   * Cannot be constructed.\n   */\n  function Router() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n\n\n  Router.swapCallParameters = function swapCallParameters(trade, options) {\n    var etherIn = trade.inputAmount.currency === ETHER;\n    var etherOut = trade.outputAmount.currency === ETHER; // the router does not support both ether in and out\n\n    !!(etherIn && etherOut) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ETHER_IN_OUT') : invariant(false) : void 0;\n    !(options.ttl > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TTL') : invariant(false) : void 0;\n    var to = validateAndParseAddress(options.recipient);\n    var amountIn = toHex(trade.maximumAmountIn(options.allowedSlippage));\n    var amountOut = toHex(trade.minimumAmountOut(options.allowedSlippage));\n    var path = trade.route.path.map(function (token) {\n      return token.address;\n    });\n    var deadline = \"0x\" + (Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16);\n    var useFeeOnTransfer = Boolean(options.feeOnTransfer);\n    var methodName;\n    var args;\n    var value;\n\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'; // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n\n          args = [amountOut, path, to, deadline];\n          value = amountIn;\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'; // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n\n          args = [amountIn, amountOut, path, to, deadline];\n          value = ZERO_HEX;\n        } else {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens' : 'swapExactTokensForTokens'; // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n\n          args = [amountIn, amountOut, path, to, deadline];\n          value = ZERO_HEX;\n        }\n\n        break;\n\n      case TradeType.EXACT_OUTPUT:\n        !!useFeeOnTransfer ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'EXACT_OUT_FOT') : invariant(false) : void 0;\n\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'; // (uint amountOut, address[] calldata path, address to, uint deadline)\n\n          args = [amountOut, path, to, deadline];\n          value = amountIn;\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'; // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n\n          args = [amountOut, amountIn, path, to, deadline];\n          value = ZERO_HEX;\n        } else {\n          methodName = 'swapTokensForExactTokens'; // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n\n          args = [amountOut, amountIn, path, to, deadline];\n          value = ZERO_HEX;\n        }\n\n        break;\n    }\n\n    return {\n      methodName: methodName,\n      args: args,\n      value: value\n    };\n  };\n\n  return Router;\n}();\n\nvar ERC20 = [\n\t{\n\t\tconstant: true,\n\t\tinputs: [\n\t\t],\n\t\tname: \"decimals\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint8\"\n\t\t\t}\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"balanceOf\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t}\n];\n\nvar _TOKEN_DECIMALS_CACHE;\nvar TOKEN_DECIMALS_CACHE = (_TOKEN_DECIMALS_CACHE = {}, _TOKEN_DECIMALS_CACHE[ChainId.MAINNET] = {\n  '0xE0B7927c4aF23765Cb51314A0E0521A9645F0E2A': 9 // DGD\n\n}, _TOKEN_DECIMALS_CACHE);\n/**\n * Contains methods for constructing instances of pairs and tokens from on-chain data.\n */\n\nvar Fetcher = /*#__PURE__*/function () {\n  /**\n   * Cannot be constructed.\n   */\n  function Fetcher() {}\n  /**\n   * Fetch information for a given token on the given chain, using the given ethers provider.\n   * @param chainId chain of the token\n   * @param address address of the token on the chain\n   * @param provider provider used to fetch the token\n   * @param symbol optional symbol of the token\n   * @param name optional name of the token\n   */\n\n\n  Fetcher.fetchTokenData = function fetchTokenData(chainId, address, provider, symbol, name) {\n    try {\n      var _TOKEN_DECIMALS_CACHE2, _TOKEN_DECIMALS_CACHE3;\n\n      var _temp3 = function _temp3(parsedDecimals) {\n        return new Token(chainId, address, parsedDecimals, symbol, name);\n      };\n\n      if (provider === undefined) provider = getDefaultProvider(getNetwork(chainId));\n\n      var _temp4 = typeof ((_TOKEN_DECIMALS_CACHE2 = TOKEN_DECIMALS_CACHE) === null || _TOKEN_DECIMALS_CACHE2 === void 0 ? void 0 : (_TOKEN_DECIMALS_CACHE3 = _TOKEN_DECIMALS_CACHE2[chainId]) === null || _TOKEN_DECIMALS_CACHE3 === void 0 ? void 0 : _TOKEN_DECIMALS_CACHE3[address]) === 'number';\n\n      return Promise.resolve(_temp4 ? _temp3(TOKEN_DECIMALS_CACHE[chainId][address]) : Promise.resolve(new Contract(address, ERC20, provider).decimals().then(function (decimals) {\n        var _TOKEN_DECIMALS_CACHE4, _extends2, _extends3;\n\n        TOKEN_DECIMALS_CACHE = _extends({}, TOKEN_DECIMALS_CACHE, (_extends3 = {}, _extends3[chainId] = _extends({}, (_TOKEN_DECIMALS_CACHE4 = TOKEN_DECIMALS_CACHE) === null || _TOKEN_DECIMALS_CACHE4 === void 0 ? void 0 : _TOKEN_DECIMALS_CACHE4[chainId], (_extends2 = {}, _extends2[address] = decimals, _extends2)), _extends3));\n        return decimals;\n      })).then(_temp3));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  /**\n   * Fetches information about a pair and constructs a pair from the given two tokens.\n   * @param tokenA first token\n   * @param tokenB second token\n   * @param provider the provider to use to fetch the data\n   */\n  ;\n\n  Fetcher.fetchPairData = function fetchPairData(tokenA, tokenB, provider) {\n    try {\n      if (provider === undefined) provider = getDefaultProvider(getNetwork(tokenA.chainId));\n      !(tokenA.chainId === tokenB.chainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_ID') : invariant(false) : void 0;\n      var address = Pair.getAddress(tokenA, tokenB);\n      return Promise.resolve(new Contract(address, IUniswapV2Pair.abi, provider).getReserves()).then(function (_ref) {\n        var reserves0 = _ref[0],\n            reserves1 = _ref[1];\n        var balances = tokenA.sortsBefore(tokenB) ? [reserves0, reserves1] : [reserves1, reserves0];\n        return new Pair(new TokenAmount(tokenA, balances[0]), new TokenAmount(tokenB, balances[1]));\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return Fetcher;\n}();\n\nexport { ChainId, Currency, CurrencyAmount, ETHER, FACTORY_ADDRESS, Fetcher, Fraction, INIT_CODE_HASH, InsufficientInputAmountError, InsufficientReservesError, MINIMUM_LIQUIDITY, Pair, Percent, Price, Rounding, Route, Router, Token, TokenAmount, Trade, TradeType, WETH, currencyEquals, inputOutputComparator, tradeComparator };\n//# sourceMappingURL=sdk.esm.js.map\n"]},"metadata":{},"sourceType":"module"}